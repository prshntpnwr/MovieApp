ext.deps = [:]
def versions = [:]
versions.arch_core = "1.1.1"
versions.room = "1.1.0"
versions.lifecycle = "1.1.1"
versions.lifecycle_scope = "2.2.0-alpha01"
versions.support = "support28.0.0-alpha1"
versions.view_pager = "1.0.0-alpha01"
versions.dagger = "2.16"
versions.junit = "4.12"
versions.retrofit = "2.3.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.dexmaker = "2.2.0"
versions.constraint_layout = "2.0.0-beta4"
versions.android_gradle_plugin = "3.1.2"
versions.kotlin = "1.3.0"
versions.coroutines = "1.0.0"
versions.http_mime="4.2.3"
versions.play="11.4.2"
versions.gson="2.7"
versions.multidex="1.0.1"
versions.glide="4.9.0"
versions.navigation = "1.0.0-alpha06"
versions.navigation_ktx = "2.1.0-beta02"
versions.junit = "4.12"
versions.espresso = "3.0.2"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.material_design = "1.1.0-alpha06"
versions.view_model_ktx = "2.0.0"
versions.lifecycle_ktx = "2.2.0-alpha01"
versions.appcompat = "1.1.0-alpha05"
versions.core = "1.0.1"
def deps = [:]

def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support"
support.app_compat = "com.android.support:appcompat-v7:$versions.support"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.view_pager = "androidx.viewpager2:viewpager2:$versions.view_pager"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.v4 = "com.android.support:support-v4:$versions.support"
support.grid_layout = "com.android.support:gridlayout-v7:$versions.support"
support.constraint_layout="androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
support.core_utils = "com.android.support:support-core-utils:$versions.support"
support.multidex="com.android.support:multidex:$versions.multidex"
support.test_runner="com.android.support.test:runner:$versions.test_runner"
deps.support = support

def material = [:]
material.material = "com.google.android.material:material:$versions.material_design"
deps.material = material

def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.room"
room.compiler = "android.arch.persistence.room:compiler:$versions.room"
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
lifecycle.view_model_scope = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle_scope"
lifecycle.extensions_ktx = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle_ktx"
lifecycle.view_model_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.view_model_ktx"
lifecycle.live_data = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle_scope"
deps.lifecycle = lifecycle

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
deps.coroutines = coroutines

def navigation = [:]
navigation.runtime = "android.arch.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime:$versions.navigation_ktx"
navigation.fragment = "androidx.navigation:navigation-ui-ktx:$versions.navigation_ktx"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation_ktx"
navigation.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.testing_ktx = "android.arch.navigation:navigation-testing-ktx:$versions.navigation"
deps.navigation = navigation

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
deps.mockito = mockito

def arch_core = [:]
arch_core.testing = "android.arch.core:core-testing:$versions.arch_core"
arch_core.core = "androidx.core:core-ktx:$versions.core"
deps.arch_core = arch_core

deps.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.http_mime="org.apache.httpcomponents:httpmime:$versions.http_mime"
deps.gson="com.google.code.gson:gson:$versions.gson"
deps.glide="com.github.bumptech.glide:glide:$versions.glide"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 15
build_versions.target_sdk = 27
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://maven.google.com' }
}
ext.addRepos = this.&addRepos